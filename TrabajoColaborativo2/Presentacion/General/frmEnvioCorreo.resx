<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>